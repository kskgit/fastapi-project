version: "3"

tasks:
  dev:
    desc: Start the FastAPI development server
    cmd: uv run uvicorn main:app --reload --host 0.0.0.0 --port 8000

  start:
    desc: Start the FastAPI server
    cmd: uv run python main.py

  lint:
    desc: Run ruff linter
    cmd: uv run ruff check .

  format:
    desc: Format code with ruff
    cmd: uv run ruff format .

  lint-fix:
    desc: Run ruff linter and fix issues
    cmd: uv run ruff check --fix .

  check-all:
    desc: Run all checks (lint and format check)
    cmds:
      - uv run ruff check .
      - uv run ruff format --check .
      - uv run lint-imports
      - uv run mypy app/clean
      - uv run lizard --CCN 5 app/ || echo "⚠️  Complexity warnings found (CCN ≥ 5)"
      - uv run lizard --CCN 10 app/

  test:
    desc: Run unit tests
    cmd: uv run pytest tests/unit -v

  test-coverage:
    desc: Run tests with coverage report
    cmd: uv run pytest tests/unit --cov=app --cov-report=term-missing

  test-all:
    desc: Run all tests
    cmd: uv run pytest tests -v

  test-e2e:
    desc: Run e2e tests
    cmd: uv run pytest tests/e2e/ -v

  db-up:
    desc: Start PostgreSQL container
    cmd: docker compose up -d postgres

  db-down:
    desc: Stop PostgreSQL container
    cmd: docker compose down

  migrate:
    desc: Run database migrations
    cmd: uv run alembic upgrade head

  migrate-auto:
    desc: Generate migration from model changes
    cmd: uv run alembic revision --autogenerate

  migrate-create:
    desc: Create empty migration file
    cmd: uv run alembic revision

  lizard-complexity:
    desc: Check code complexity with lizard
    cmd: uv run lizard --CCN 10 app/

  db-rest:
    desc: Reset database and create fresh migration
    cmds:
      - docker exec fastapi-postgres psql -U fastapi_user -d fastapi_db -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
      - rm -f alembic/versions/*.py
      - uv run alembic revision --autogenerate -m "Initial migration User and Todo models"
      - uv run alembic upgrade head
      - echo "Database reset complete!"