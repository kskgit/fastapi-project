[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fastapi-project"
version = "0.1.0"
description = "FastAPI Todo Management with Clean Architecture"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Root level dependencies
    "alembic>=1.16.1",
    "asyncpg>=0.30.0",
    "fastapi>=0.115.12",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.9.1",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.34.3",
]


[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["tests*"]

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "ruff>=0.11.13",
]
test = [
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=6.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = ["alembic/versions/*.py"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "B008",  # FastAPI uses function calls in defaults for dependency injection
    "B904",  # Within `except` clause, raise exceptions with `raise ... from err`
]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# =============================================================================
# 共通設定 - 全レイヤーで継承される設定
# =============================================================================

[tool.mypy]
# 基本設定 - デフォルトは中程度の厳密さ
python_version = "3.12"
strict = false
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true

# =============================================================================
# Clean Architecture層別のmypy設定
# =============================================================================

# Domain層 - 最も厳密 (ビジネスロジックの品質確保)
[[tool.mypy.overrides]]
module = "app.clean.domain.*"
strict = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_untyped_defs = true
warn_return_any = true

# Services層 - 最も厳密 (ビジネスロジックの品質確保)  
[[tool.mypy.overrides]]
module = "app.clean.services.*"
strict = true
disallow_any_unimported = true
disallow_untyped_defs = true
warn_return_any = true

# Infrastructure層 - 緩和 (SQLAlchemy等の外部ライブラリ制約)
[[tool.mypy.overrides]]
module = "app.clean.infrastructure.*"
strict = false
disallow_untyped_defs = false
ignore_missing_imports = true
allow_untyped_calls = true
allow_untyped_defs = true
# SQLAlchemy Base class warnings suppression
disallow_subclassing_any = false

# API層 - 中程度 (FastAPI特有の問題を考慮)
[[tool.mypy.overrides]]
module = "app.clean.api.*"
strict = false
disallow_untyped_defs = true
warn_return_any = false
# FastAPI dependency injection warnings suppression
allow_untyped_calls = true

# Core層 - 中程度 (設定・ユーティリティ)
[[tool.mypy.overrides]]
module = "app.clean.core.*"
strict = false
disallow_untyped_defs = true
ignore_missing_imports = true

# Tier/Common層 - 緩和 (レガシーコード対応)
[[tool.mypy.overrides]]
module = ["app.tier.*", "app.common.*"]
strict = false
disallow_untyped_defs = false
ignore_missing_imports = true
allow_untyped_calls = true
allow_untyped_defs = true

# Tests - 緩和 (テストコードの実用性優先)
[[tool.mypy.overrides]]
module = "tests.*"
strict = false
disallow_untyped_defs = false
allow_untyped_calls = true
allow_untyped_defs = true

# Scripts - 緩和 (ユーティリティスクリプト)
[[tool.mypy.overrides]]
module = "scripts.*"
strict = false
disallow_untyped_defs = false


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
]
