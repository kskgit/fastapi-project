[project]
name = "fastapi-project"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.16.1",
    "asyncpg>=0.30.0",
    "fastapi>=0.115.12",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.9.1",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.34.3",
]

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "ruff>=0.11.13",
    "import-linter>=2.0",
    "pytest>=8.0.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=6.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = ["alembic/versions/*.py"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "TID",  # flake8-tidy-imports
]
ignore = [
    "B008",  # FastAPI uses function calls in defaults for dependency injection
    "B904",  # Within `except` clause, raise exceptions with `raise ... from err`
]

[tool.ruff.lint.per-file-ignores]
"app/clean/todo/infrastructure/**" = ["TID251"]  # Allow SQLAlchemy in infrastructure layer
"alembic/**" = ["TID251"]  # Allow SQLAlchemy in database migrations
"app/clean/todo/core/**" = ["TID251"]  # Allow SQLAlchemy in core database setup
"app/tier/**" = ["TID251"]  # Allow SQLAlchemy in tier-based implementation (for comparison)
"core/**" = ["TID251"]  # Allow SQLAlchemy in old core setup
"main.py" = ["TID251"]  # Allow infrastructure imports in main.py for dependency injection setup

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"sqlalchemy" = { msg = "Use repository interfaces, not SQLAlchemy directly in service layer" }
"app.clean.todo.infrastructure" = { msg = "Use dependency injection, not direct infrastructure imports" }

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
]
